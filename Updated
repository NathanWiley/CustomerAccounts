/************************************************************************************
Programmers: 

Micah Olson: 
Coded:
mainMenu()
addRecord()
readFile()
displayContent()

Nathan Wiley:
Coded:
searchRecord()
deleteRecord()
editRecord()

Filename: Source.cpp
Date: 02/20/17  04:19:00 PM
************************************************************************************/
/************************************************************************************
Assignment: Grouple Project: Customer Accounts

Abstract:
This program will allow a user to enter records, search for records, edit records, 
and display records.

Input:
User will input data.

Output:
User input will be written to a file.
************************************************************************************/
#include <iostream>
#include <fstream>
#include <iomanip>
#include <cstring>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

struct Account
{
	string name;
	string city;
	string state;
	int zip;
	string phone;
	float balance;
	string dateLastPayment;
};

//prototypes
void mainMenu(vector<Account> & accounts);
void addRecord(vector<Account> & accounts);
void readFile(vector<Account> & accounts);
void displayContent(vector<Account> & accounts);
void searchRecord(vector<Account> & accounts);
void deleteRecord(vector<Account> & accounts);
void editRecord(vector<Account> & accounts);

int main()
{
	//Create vector to store the accounts.
	vector<Account> accounts;

	//Read datafile into vector.
	readFile(accounts);

	//Start main menu.
	mainMenu(accounts);

	return 0;
}//end main

//Main menu function.
void mainMenu(vector<Account> & accounts)
{
	unsigned short choice = 0;
	while (true)
	{
		//Display main menu
		cout << "\nCustomer Accounts Main Menu. What would you like to do?:\n"
			<< "----------------------------------------------------------------\n"
			<< "1. Enter a new record.\n"
			<< "2. Search for record by name and display it.\n"
			<< "3. Search for record by name and edit it.\n"
			<< "4. Search for record by name and delete it.\n"
			<< "5. Display all records in datafile.\n"
			<< "6. Quit\n";
		cin >> choice;

		//Process user selection
		switch (choice)
		{
		case 1:
			addRecord(accounts);
			break;
		case 2:
			searchRecord(accounts);
			break;
		case 3:
			editRecord(accounts);
			break;
		case 4:
			deleteRecord(accounts);
			break;
		case 5:
			displayContent(accounts);
			break;
		case 6:
			exit(0);
			break;
		default:
			cout << "You must choose from one of the options, 1-6!\n";
			break;
		}
		choice = 0;

	}//End loop

}//end mainMenu

//Read datafile into vector function.
void readFile(vector<Account> & accounts)
{
	ifstream inFile;
	inFile.open("AccountRecords.txt");
	while (inFile)
	{
		Account temp;
		inFile >> temp.name; 
		inFile >> temp.city;
		inFile >> temp.state;
		inFile >> temp.zip;
		inFile >> temp.phone;
		inFile >> temp.balance;
		inFile >> temp.dateLastPayment;
		inFile.ignore(1);
		accounts.push_back(temp);
	}
	inFile.close();
}//end readFile

//Add new records.
void addRecord(vector<Account> & accounts)
{
	Account temp;
	cout << "\nEnter name: ";
	cin >> temp.name;
	cout << "\nEnter city: ";
	cin >> temp.city;
	cout << "\nEnter state: ";
	cin >> temp.state;
	cout << "\nEnter zip: ";
	cin >> temp.zip;
	cout << "\nEnter phone: ";
	cin >> temp.phone;
	cout << "\nEnter balance: ";
	cin >> temp.balance;
	cout << "\nEnter date of last payment: ";
	cin >> temp.dateLastPayment;
	accounts.push_back(temp);

	cout << "New record added!\n";
}//end addRecord

//Search for record and display it.
void searchRecord(vector<Account> & accounts)
{
	string name;
	cout << "Enter the name of the record you want to search: ";
	cin >> name;

	for (int i = 0; i < accounts.size(); i++)
	{
		if (name == accounts[i].name)
		{
			cout << "Account by the name of " << name << " found in record " << i + 1 << endl;
			cout << "\n--------------------------\n"
				<< "Account number " << i + 1 << ":\n"
				<< "Name: " << accounts[i].name << endl
				<< "City: " << accounts[i].city << endl
				<< "State: " << accounts[i].state << endl
				<< "Zip: " << accounts[i].zip << endl
				<< "Phone: " << accounts[i].phone << endl
				<< "Balance: $" << accounts[i].balance << endl
				<< "Last Payment: " << accounts[i].dateLastPayment << endl;
			return; //breaks out of the loop to return to the menu
		}//end if
		else
		{
			cout << "Account by the name of " << name << " not found in record " << i + 1 << endl;
		}//end else
	}//end for loop
}//end searchRecord

//Search for record and delete it.
void deleteRecord(vector<Account> & accounts)
{

	string name;
	cout << "Enter the name of the record you want to delete: ";
	cin >> name;

	for (int i = 0; i < accounts.size(); i++)
	{
		if (name == accounts[i].name)
		{
			cout << "Account by the name of " << name << "  found in record " << i + 1 << endl;
			accounts.erase(accounts.begin() + i, accounts.begin() + 1 + i);
			return; //breaks out of the loop to return to the menu
		}
		else
		{
			cout << "Account by the name of " << name << " not found in record " << i + 1 << endl;
		}//end else
	}//end for loop
	cout << "Record removed successfully\n";
}//end deleteRecord

//Search for record and edit it.
void editRecord(vector<Account> & accounts)
{
	string name;
	cout << "Enter the name of the record you want to edit: ";
	cin >> name;	

	for (int i = 0; i < accounts.size(); i++)
	{
		if (name == accounts[i].name)
		{
			cout << "Account by the name of " << name << " found in record " << i + 1 << endl;
			cout << "\nEnter new name: ";
			cin >> accounts[i].name;
			cout << "\nEnter new city: ";
			cin >> accounts[i].city;
			cout << "\nEnter new state: ";
			cin >> accounts[i].state;
			cout << "\nEnter new zip: ";
			cin >> accounts[i].zip;
			cout << "\nEnter new phone: ";
			cin >> accounts[i].phone;
			cout << "\nEnter new balance: ";
			cin >> accounts[i].balance;
			cout << "\nEnter new date of last payment: ";
			cin >> accounts[i].dateLastPayment;
			return; //breaks out of the loop to return to the menu
		}//end if
		else
		{
			cout << "Account by the name of " << name << " not found in record " << i+1 << endl;
		}//end else
	}//end for loop

}//end editRecord

//Display content of entire file.
void displayContent(vector<Account> & accounts)
{
	for (int i = 0; i < accounts.size(); i++)
	{
		cout << "\n--------------------------\n"
			<< "Account number " << i + 1 << ":\n"
			<< "Name: " << accounts[i].name << endl
			<< "City: " << accounts[i].city << endl
			<< "State: " << accounts[i].state << endl
			<< "Zip: " << accounts[i].zip << endl
			<< "Phone: " << accounts[i].phone << endl
			<< "Balance: $" << accounts[i].balance << endl
			<< "Last Payment: " << accounts[i].dateLastPayment << endl;
	}
}//end displayContent

/* Output:
Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
3
Enter the name of the record you want to edit: jeff
Account by the name of jeff not found in record 1
Account by the name of jeff not found in record 2

Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
3
Enter the name of the record you want to edit: brandon
Account by the name of brandon not found in record 1
Account by the name of brandon found in record 2

Enter new name: brenden

Enter new city: GP

Enter new state: OR

Enter new zip: 97527

Enter new phone: 5415555555

Enter new balance: 1000

Enter new date of last payment: 01/01/1999

Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
2
Enter the name of the record you want to search: brenden
Account by the name of brenden not found in record 1
Account by the name of brenden found in record 2

--------------------------
Account number 2:
Name: brenden
City: GP
State: OR
Zip: 97527
Phone: 5415555555
Balance: $1000
Last Payment: 01/01/1999

Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
4
Enter the name of the record you want to delete: brenden
Account by the name of brenden not found in record 1
Account by the name of brenden  found in record 2

Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
5

--------------------------
Account number 1:
Name: micah
City: grantspass
State: OR
Zip: 97526
Phone: 7079543214
Balance: $2364.01
Last Payment: 02/01/2017

Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
1

Enter name: nathan

Enter city: GP

Enter state: OR

Enter zip: 97527

Enter phone: 5410001111

Enter balance: 1000000

Enter date of last payment: 3/6/2017
New record added!

Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
5

--------------------------
Account number 1:
Name: micah
City: grantspass
State: OR
Zip: 97526
Phone: 7079543214
Balance: $2364.01
Last Payment: 02/01/2017

--------------------------
Account number 2:
Name: nathan
City: GP
State: OR
Zip: 97527
Phone: 5410001111
Balance: $1e+06
Last Payment: 3/6/2017

Customer Accounts Main Menu. What would you like to do?:
----------------------------------------------------------------
1. Enter a new record.
2. Search for record by name and display it.
3. Search for record by name and edit it.
4. Search for record by name and delete it.
5. Display all records in datafile.
6. Quit
6
*/
